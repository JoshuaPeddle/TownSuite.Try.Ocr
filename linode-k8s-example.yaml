# https://www.linode.com/docs/guides/how-to-configure-load-balancing-with-tls-encryption-on-a-kubernetes-cluster/
# You must add a cert to avoid using the built in dev copy.
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: ts-ocr-ns
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ts-ocr-config
  namespace: ts-ocr-ns
data:
  JWT__ValidAudience: "https://PLACEHOLDER"
  JWT__ValidIssuer: "https://PLACEHOLDER"
  JWT__Secret: "PLACEHOLDER_PLACEHOLDER_PLACEHOLDER_PLACEHOLDER_PLACEHOLDER_PLACEHOLDER"
  JWT__ValidInMinutes: "525960"
  JWT__RefreshTokenValidInMinutes: "578556"
  Settings__TessDataFolder: "./tessdata"
  Settings__ValidAudience: "eng"
  ASPNETCORE_Kestrel__Certificates__Default__Password: "A_W3AK_PLACEHOLDER_DEV_PASSWORD"
  ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/aspnetapp.pfx"
  ASPNETCORE_URLS: "https://+:443;http://+:80"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ocr-app
  labels:
    app: ts-ocr-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ts-ocr-app
  template:
    metadata:
      labels:
        app: ts-ocr-app
      namespace: ts-ocr-ns
    spec:
      containers:
      - env:
        - name: JWT__ValidAudience
          valueFrom:
            configMapKeyRef:
              key: JWT__ValidAudience
              name: ts-ocr-config
        - name: JWT__ValidIssuer
          valueFrom:
            configMapKeyRef:
              key: JWT__ValidIssuer
              name: ts-ocr-config
        - name: JWT__Secret
          valueFrom:
            configMapKeyRef:
              key: JWT__Secret
              name: ts-ocr-config
        - name: JWT__ValidInMinutes
          valueFrom:
            configMapKeyRef:
              key: JWT__ValidInMinutes
              name: ts-ocr-config
        - name: JWT__RefreshTokenValidInMinutes
          valueFrom:
            configMapKeyRef:
              key: JWT__RefreshTokenValidInMinutes
              name: ts-ocr-config
        - name: Settings__TessDataFolder
          valueFrom:
            configMapKeyRef:
              key: Settings__TessDataFolder
              name: ts-ocr-config
        - name: Settings__ValidAudience
          valueFrom:
            configMapKeyRef:
              key: Settings__ValidAudience
              name: ts-ocr-config
        - name: ASPNETCORE_URLS
          valueFrom:
            configMapKeyRef:
              key: ASPNETCORE_URLS
              name: ts-ocr-config
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          valueFrom:
            configMapKeyRef:
              key: ASPNETCORE_Kestrel__Certificates__Default__Path
              name: ts-ocr-config
        - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          valueFrom:
            configMapKeyRef:
              key: ASPNETCORE_Kestrel__Certificates__Default__Password
              name: ts-ocr-config
      - name: ocr
        image: townsuite/ocr:latest
        ports:
        - containerPort: 443
        livenessProbe:
          httpGet:
            path: /healthz
            port: 443
          initialDelaySeconds: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /healthz
            port: 443
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 443
          initialDelaySeconds: 3
          periodSeconds: 10
      #imagePullSecrets:
      #- name: [Your Secrets Name]

---
apiVersion: v1
kind: Service
metadata:
  name: ts-ocr-service
spec:
  type: ClusterIP
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: ts-ocr-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ts-ocr-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - [Add your url here]
    secretName: letsencrypt-secret-prod
  rules:
  - host: [Add your url here]
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ts-ocr-service
            port:
              number: 443

